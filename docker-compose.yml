version: '3.8'

services:
  # ScyllaDB cluster (3 nodes for replication)
  scylla-node1:
    image: scylladb/scylla:5.2
    container_name: scylla-node1
    ports:
      - "9042:9042"
      - "7000:7000"
      - "7001:7001"
    volumes:
      - scylla-data1:/var/lib/scylla
    command: --seeds=scylla-node1,scylla-node2,scylla-node3 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
    networks:
      - drp-network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

  scylla-node2:
    image: scylladb/scylla:5.2
    container_name: scylla-node2
    ports:
      - "9043:9042"
      - "7002:7000"
      - "7003:7001"
    volumes:
      - scylla-data2:/var/lib/scylla
    command: --seeds=scylla-node1,scylla-node2,scylla-node3 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
    networks:
      - drp-network
    depends_on:
      - scylla-node1
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

  scylla-node3:
    image: scylladb/scylla:5.2
    container_name: scylla-node3
    ports:
      - "9044:9042"
      - "7004:7000"
      - "7005:7001"
    volumes:
      - scylla-data3:/var/lib/scylla
    command: --seeds=scylla-node1,scylla-node2,scylla-node3 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
    networks:
      - drp-network
    depends_on:
      - scylla-node1
      - scylla-node2
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

  # IPFS node
  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: ipfs-node
    ports:
      - "4001:4001"   # IPFS swarm
      - "4001:4001/udp"
      - "5001:5001"   # IPFS API
      - "8080:8080"   # IPFS Gateway
    volumes:
      - ipfs-data:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    networks:
      - drp-network
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 30s
      timeout: 10s
      retries: 5

  # DRP Gateway (FastAPI)
  drp-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drp-gateway
    ports:
      - "8000:8000"
    environment:
      - SCYLLA_HOSTS=scylla-node1:9042,scylla-node2:9042,scylla-node3:9042
      - IPFS_URL=http://ipfs:5001
      - DRP_RPC_URL=http://localhost:8545
      - MASTER_KEY_FILE=/app/keys/master_key.key
      - CONSENT_DB_FILE=/app/data/consent_tokens.json
      - CONSENT_PRIVATE_KEY_FILE=/app/keys/consent_key.pem
      - ELDER_KEYS_FILE=/app/keys/elder_keys.json
      - AUDIT_LOG_DIR=/app/logs
    volumes:
      - drp-data:/app/data
      - drp-keys:/app/keys
      - drp-logs:/app/logs
    networks:
      - drp-network
    depends_on:
      scylla-node1:
        condition: service_healthy
      scylla-node2:
        condition: service_healthy
      scylla-node3:
        condition: service_healthy
      ipfs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Mock Ethereum node (for development)
  geth:
    image: ethereum/client-go:latest
    container_name: geth-node
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - geth-data:/root/.ethereum
    command: >
      --dev
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.api eth,web3,personal,net
      --http.corsdomain "*"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api eth,web3,personal,net
      --ws.origins "*"
      --allow-insecure-unlock
      --unlock 0
      --password /dev/null
    networks:
      - drp-network
    healthcheck:
      test: ["CMD", "geth", "attach", "--exec", "eth.blockNumber"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - drp-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - drp-network
    depends_on:
      - prometheus

volumes:
  scylla-data1:
  scylla-data2:
  scylla-data3:
  ipfs-data:
  geth-data:
  drp-data:
  drp-keys:
  drp-logs:
  prometheus-data:
  grafana-data:

networks:
  drp-network:
    driver: bridge
